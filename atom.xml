<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>个人小站</title>
  
  <subtitle>世间所有相遇,都是久别重逢</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-30T14:29:10.739Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>洪宁</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>网络传输大小端问题</title>
    <link href="http://yoursite.com/2018/10/30/%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E5%A4%A7%E5%B0%8F%E7%AB%AF%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/10/30/网络传输大小端问题/</id>
    <published>2018-10-30T13:14:05.000Z</published>
    <updated>2018-10-30T14:29:10.739Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网络传输大小端问题"><a href="#网络传输大小端问题" class="headerlink" title="网络传输大小端问题"></a>网络传输大小端问题</h1><p><strong>我们在边写linux网络编程的时候经常会使用htonl htons等函数用来对int类型 long类型的数据进行本地字节序和网络字节序的转换，而对于字符串类型的数据，就不需要转换呢？</strong></p><ul><li>网络上传输的数据都是字节流,对于一个多字节数值,在进行网络传输的时候,先传递哪个字节?其实是按照传输数据的内存地址由低到高来进行传输的。</li></ul><p><strong>在验证上面这一个问题之前，先来看一下大小端的问题</strong></p><ul><li>小端字节序是我们比较常见的字节序，个人使用的x86计算机大部分使用小端字节序，其实很好理解,小端法(Little-Endian)就是低位字节排放在内存的低地址端(即该值的起始地址),高位字节排放在内存的高地址端;</li><li>大端法(Big-Endian)就是高位字节排放在内存的低地址端(即该值的起始地址),低位字节排放在内存的高地址端</li><li>就比如 0x12345678 这个十六进制数字，低位在最右边(理解一下十进制中12345678，从右往左是不是个十百千…)，小端存储法就是0x78在低地址，0x12在高地址;大端0x78在高地址，0x12在低地址，可以用下面这一段代码看看自己是不是小端字节序.</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> val = <span class="number">0x12345678</span>;</span><br><span class="line"><span class="keyword">char</span> *pVal = (<span class="keyword">char</span>*)&amp;val;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%x %x %x %x\n"</span>,*(pVal+<span class="number">0</span>),*(pVal+<span class="number">1</span>),*(pVal+<span class="number">2</span>),*(pVal+<span class="number">3</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>输出结果是:78 56 34 12,证明了我使用的这台计算机是小端字节序</li></ul><p><strong>那么字符串在内存中存储形式是怎么样的呢？</strong></p><ul><li>比如”Hello”这个字符串，在内存中则是按照字符串本身从左往右顺序存储，’H’在前，’o’在后。这个则没必要写代码来验证了，太简单…</li></ul><p><strong>有了以上基础知识,那么便可以说明第一个问题了</strong></p><ul><li>网络上传输数据是按内存地址从低到高按顺序传输,那么传输”Hello”这个字符串的时候，就是按照’H’ ‘e’ ‘l’ ‘l’ ‘o’的顺序依次传输，对方接收的话，也是按照这个顺序把数据存入缓存区,字符串不涉及到大小端存储的规则，所以无需调用字节序转换函数来处理。</li><li>如果是 0x12345678 这个数据，那么则是按照0x78 0x56 0x34 0x12这个顺序按字节发送(16进制2位则是一个字节),对方机器如果收到后用int类型来解释这个数据，如果对方机器是小端字节序，那么没问题，收到的数据还是0x12345678，但是如果对方机器是大端字节序,用int来解释则会把高地址数据放在低位 低地址放在高位，变成了0x78563412,就会发生不想要的结果。</li></ul><p><strong>结论</strong></p><ul><li>所以在字节序相同的平台时间传输数据，进行转换字节序是没必要的，而在不同平台之间，则一定要进行转换</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;网络传输大小端问题&quot;&gt;&lt;a href=&quot;#网络传输大小端问题&quot; class=&quot;headerlink&quot; title=&quot;网络传输大小端问题&quot;&gt;&lt;/a&gt;网络传输大小端问题&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;我们在边写linux网络编程的时候经常会使用htonl htons等
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JDSpider使用文档</title>
    <link href="http://yoursite.com/2018/10/30/JDSpiderReadme/"/>
    <id>http://yoursite.com/2018/10/30/JDSpiderReadme/</id>
    <published>2018-10-29T16:03:25.000Z</published>
    <updated>2018-10-29T16:17:32.263Z</updated>
    
    <content type="html"><![CDATA[<h1 id="配置文件使用"><a href="#配置文件使用" class="headerlink" title="配置文件使用"></a>配置文件使用</h1><h2 id="Account-txt文件说明"><a href="#Account-txt文件说明" class="headerlink" title="Account.txt文件说明"></a>Account.txt文件说明</h2><ul><li>这是账号cookies配置文件,必须按照指定格式配置</li><li>格式: 账号名—-这里随意填写—-cookies</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例如:</span><br><span class="line">18959273396----11----abtest=20181028143048053_24; mobilev=html5; sid=84964d12b0e88cf2e3545d93cb8d9925;</span><br></pre></td></tr></table></figure><h2 id="Ticket-json文件说明"><a href="#Ticket-json文件说明" class="headerlink" title="Ticket.json文件说明"></a>Ticket.json文件说明</h2><ul><li>这是优惠券信息文件</li><li>格式如下<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>:<span class="string">"东券非自营手机"</span>,</span><br><span class="line">    <span class="attr">"key"</span>:<span class="string">"ac496b99aa3b4fde8562ba3e14646cb2"</span>,</span><br><span class="line">    <span class="attr">"id"</span>:<span class="string">"15196163"</span>,</span><br><span class="line">    "starttime":"2018-10-28 21:16:00.950",  小数点后面为毫秒数</span><br><span class="line">    "submitcnt":"3",提交次数</span><br><span class="line">    "submitinterval":"200"提交间隔</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="YDMConfig-json文件说明"><a href="#YDMConfig-json文件说明" class="headerlink" title="YDMConfig.json文件说明"></a>YDMConfig.json文件说明</h2><ul><li>云打码平台配置文件</li><li>格式如下<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "username":"hn_user",    云打码账号名</span><br><span class="line">    "password":"xxxxxx", 账号密码</span><br><span class="line">    "appid":6017, 开发者软件id</span><br><span class="line">    "appkey":"903e515dfee0a2bcabfd4a7f9a5d3daa"开发者软件秘钥</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="日志文件"><a href="#日志文件" class="headerlink" title="日志文件"></a>日志文件</h1><ul><li>抢券结束后在Log目录下会生成response_log.txt  和 result_log.txt文件</li><li>response_log.txt 记录了请求京东服务器对方给的回应</li><li>result_log.txt 记录了抢券结果，如果有账号成功领取到才会有记录</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;配置文件使用&quot;&gt;&lt;a href=&quot;#配置文件使用&quot; class=&quot;headerlink&quot; title=&quot;配置文件使用&quot;&gt;&lt;/a&gt;配置文件使用&lt;/h1&gt;&lt;h2 id=&quot;Account-txt文件说明&quot;&gt;&lt;a href=&quot;#Account-txt文件说明&quot; class
      
    
    </summary>
    
    
  </entry>
  
</feed>
